//colors
$black: #000;
$ochre: #D2DA77;
$green1: #046003;
$green1: #032823;
$green1: #044003;
$green1: #349752;
$brown: #211812;
$light-grey: #e7e7e7;
$white: #fff;
// fonts
$garamond: 'EB Garamond';
$futura: 'Futura';
//paralax vars
@mixin transition($time, $property: all, $easing: ease-in) {
  transition: $property $time $easing;
}

$parallax-offset: 30vh;
$content-offset: 40vh;
$transition-speed: 1.2s;
$slide-number: 3;

html {
  overflow: hidden;
}

body {
  // general stuff
  overflow: hidden;
  font-family: $futura;
  color: $ochre;
  margin: 0;
  background-color: $brown;
  // header menu
  header {
  }
  main {
    .background {
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center center;
      overflow: hidden;
      will-change: transform;
      backface-visibility: hidden;
      height: 100vh + $parallax-offset;
      position: fixed;
      width: 100%;
      transform: translateY($parallax-offset);
      @include transition($transition-speed, all, cubic-bezier(0.22, 0.44, 0, 1));
      &:before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, .3);
      }
      &:first-child {
        background-image: url(https://s8.postimg.org/lf2udl5np/4_Aihmii.jpg);
        transform: translateY(-$parallax-offset / 2);
        .content-wrapper {
          transform: translateY($parallax-offset /2);
        }
      }
      &:nth-child(2) {
        background-image: url(https://s8.postimg.org/ow4wgk4px/ugqti_Lg.jpg);
      }
      &:nth-child(3) {
        background-image: url(https://s8.postimg.org/grwsbtiat/x_ZMOBTj.jpg);
      }
    }
  }
  footer {
  }
}

// Set stacking context of slides
@for $i from 1 to ($slide-number + 1) {
  .background:nth-child(#{$i}) {
    z-index: ($slide-number + 1) - $i;
  }
}

// set transform values

.background.up-scroll {
  transform: translate3d(0,-$parallax-offset / 2,0);
  .content-wrapper {
    transform: translateY($parallax-offset / 2);
  }
  + .background {
    transform: translate3d(0,$parallax-offset,0);
    .content-wrapper {
      transform: translateY($parallax-offset);
    }
  }
}

.background.down-scroll {
  transform: translate3d(0,-(100vh + $parallax-offset),0);
  .content-wrapper {
    transform: translateY($content-offset);
  }
  + .background:not(.down-scroll) {
    transform: translate3d(0,-$parallax-offset / 2,0);
    .content-wrapper {
      transform: translateY($parallax-offset / 2);
    }
  }
}